#允许rpc
enable-rpc=true
#允许所有来源, web界面跨域权限需要
rpc-allow-origin-all=true
#允许非外部访问
rpc-listen-all=true
#RPC端口, 仅当默认端口被占用时修改
#rpc-listen-port=6800
event-poll=select

#用户名
#rpc-user=username
#密码
#rpc-passwd=passwd
#访问方式 http://username:passwd@hostname:port/jsonrpc 

#最大同时下载数(任务数), 路由建议值: 3
max-concurrent-downloads=3
#断点续传
continue=true
#同服务器连接数
max-connection-per-server=10
#最小文件分片大小, 下载线程数上限取决于能分出多少片, 对于小文件重要
min-split-size=8M
#单文件最大线程数, 路由建议值: 5
split=10
#下载速度限制
max-overall-download-limit=0
#单文件速度限制
max-download-limit=0
#上传速度限制
max-overall-upload-limit=0
#单文件速度限制
max-upload-limit=0
#断开速度过慢的连接
#lowest-speed-limit=0
#验证用，需要1.16.1之后的release版本
#referer=*
#进度文件保存路径
input-file=/tmp/mnt/tomato/aria2/aria2.session
save-session=/tmp/mnt/tomato/aria2/aria2.session
log=/tmp/mnt/tomato/aria2/aria2.log
log-level=notice
#定时保存会话，需要1.16.1之后的release版
save-session-interval=60
#文件保存路径, 默认为当前启动位置
dir=/tmp/mnt/tomato/downloads
#文件缓存, 使用内置的文件缓存, 如果你不相信Linux内核文件缓存和磁盘内置缓存时使用, 需要1.16及以上版本
disk-cache=16M
#另一种Linux文件缓存方式, 使用前确保您使用的内核支持此选项, 需要1.15及以上版本(?)
#enable-mmap=true
#文件预分配, 能有效降低文件碎片, 提高磁盘性能. 缺点是预分配时间较长， falloc  prealloc不适合linux，CPU满载时间过长
#所需时间 none < falloc ? trunc << prealloc, falloc和trunc需要文件系统和内核支持
file-allocation=trunc

#*******BT相关******
#启用本地节点查找
bt-enable-lpd=true
enable-dht=true
enable-peer-exchange=true
#添加额外的tracker
#bt-tracker=<URI>,…
#单种子最大连接数
bt-max-peers=90
#强制加密, 防迅雷必备
#bt-require-crypto=true
#当下载的文件是一个种子(以.torrent结尾)时, 自动下载BT
follow-torrent=true
#BT监听端口, 当端口屏蔽时使用
#listen-port=6881-6999

#*******PT相关,关键在于伪装******
#不确定是否需要，为保险起见，need more test
#enable-dht=false
#bt-enable-lpd=false
#enable-peer-exchange=false
#修改特征
#user-agent=uTorrent/2210(25130)
#peer-id-prefix=-UT2210-
#修改做种设置, 允许做种
#seed-ratio=0
#保存会话
#force-save=true
#bt-hash-check-seed=true
#bt-seed-unverified=true
#bt-save-metadata=true
